#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _002_LinqToSql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TSQLFundamentals2008")]
	public partial class TsqlFundamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertShipper(Shipper instance);
    partial void UpdateShipper(Shipper instance);
    partial void DeleteShipper(Shipper instance);
    partial void InsertNum(Num instance);
    partial void UpdateNum(Num instance);
    partial void DeleteNum(Num instance);
    #endregion
		
		public TsqlFundamDataContext() : 
				base(global::_002_LinqToSql.Properties.Settings.Default.TSQLFundamentals2008ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TsqlFundamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TsqlFundamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TsqlFundamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TsqlFundamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Shipper> Shippers
		{
			get
			{
				return this.GetTable<Shipper>();
			}
		}
		
		public System.Data.Linq.Table<Num> Nums
		{
			get
			{
				return this.GetTable<Num>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="Production.fn_TopProducts", IsComposable=true)]
		public IQueryable<fn_TopProductsResult> fn_TopProducts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> supid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> n)
		{
			return this.CreateMethodCallQuery<fn_TopProductsResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), supid, n);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="HR.Employees")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empid;
		
		private string _lastname;
		
		private string _firstname;
		
		private string _title;
		
		private string _titleofcourtesy;
		
		private System.DateTime _birthdate;
		
		private System.DateTime _hiredate;
		
		private string _address;
		
		private string _city;
		
		private string _region;
		
		private string _postalcode;
		
		private string _country;
		
		private string _phone;
		
		private System.Nullable<int> _mgrid;
		
		private EntitySet<Employee> _Employees;
		
		private EntitySet<Order> _Orders;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempidChanging(int value);
    partial void OnempidChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OntitleofcourtesyChanging(string value);
    partial void OntitleofcourtesyChanged();
    partial void OnbirthdateChanging(System.DateTime value);
    partial void OnbirthdateChanged();
    partial void OnhiredateChanging(System.DateTime value);
    partial void OnhiredateChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void OnpostalcodeChanging(string value);
    partial void OnpostalcodeChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnmgridChanging(System.Nullable<int> value);
    partial void OnmgridChanged();
    #endregion
		
		public Employee()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titleofcourtesy", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string titleofcourtesy
		{
			get
			{
				return this._titleofcourtesy;
			}
			set
			{
				if ((this._titleofcourtesy != value))
				{
					this.OntitleofcourtesyChanging(value);
					this.SendPropertyChanging();
					this._titleofcourtesy = value;
					this.SendPropertyChanged("titleofcourtesy");
					this.OntitleofcourtesyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthdate", DbType="DateTime NOT NULL")]
		public System.DateTime birthdate
		{
			get
			{
				return this._birthdate;
			}
			set
			{
				if ((this._birthdate != value))
				{
					this.OnbirthdateChanging(value);
					this.SendPropertyChanging();
					this._birthdate = value;
					this.SendPropertyChanged("birthdate");
					this.OnbirthdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hiredate", DbType="DateTime NOT NULL")]
		public System.DateTime hiredate
		{
			get
			{
				return this._hiredate;
			}
			set
			{
				if ((this._hiredate != value))
				{
					this.OnhiredateChanging(value);
					this.SendPropertyChanging();
					this._hiredate = value;
					this.SendPropertyChanged("hiredate");
					this.OnhiredateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(15)")]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalcode", DbType="NVarChar(10)")]
		public string postalcode
		{
			get
			{
				return this._postalcode;
			}
			set
			{
				if ((this._postalcode != value))
				{
					this.OnpostalcodeChanging(value);
					this.SendPropertyChanging();
					this._postalcode = value;
					this.SendPropertyChanged("postalcode");
					this.OnpostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mgrid", DbType="Int")]
		public System.Nullable<int> mgrid
		{
			get
			{
				return this._mgrid;
			}
			set
			{
				if ((this._mgrid != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmgridChanging(value);
					this.SendPropertyChanging();
					this._mgrid = value;
					this.SendPropertyChanged("mgrid");
					this.OnmgridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employees", ThisKey="empid", OtherKey="mgrid")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Order", Storage="_Orders", ThisKey="empid", OtherKey="empid")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Employee", Storage="_Employee1", ThisKey="mgrid", OtherKey="empid", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._mgrid = value.empid;
					}
					else
					{
						this._mgrid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Categories")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _categoryid;
		
		private string _categoryname;
		
		private string _description;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OncategorynameChanging(string value);
    partial void OncategorynameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Category()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryname", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string categoryname
		{
			get
			{
				return this._categoryname;
			}
			set
			{
				if ((this._categoryname != value))
				{
					this.OncategorynameChanging(value);
					this.SendPropertyChanging();
					this._categoryname = value;
					this.SendPropertyChanged("categoryname");
					this.OncategorynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Products", ThisKey="categoryid", OtherKey="categoryid")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _productid;
		
		private string _productname;
		
		private int _supplierid;
		
		private int _categoryid;
		
		private decimal _unitprice;
		
		private bool _discontinued;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Supplier> _Supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnproductidChanging(int value);
    partial void OnproductidChanged();
    partial void OnproductnameChanging(string value);
    partial void OnproductnameChanged();
    partial void OnsupplieridChanging(int value);
    partial void OnsupplieridChanged();
    partial void OncategoryidChanging(int value);
    partial void OncategoryidChanged();
    partial void OnunitpriceChanging(decimal value);
    partial void OnunitpriceChanged();
    partial void OndiscontinuedChanging(bool value);
    partial void OndiscontinuedChanged();
    #endregion
		
		public Product()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Category = default(EntityRef<Category>);
			this._Supplier = default(EntityRef<Supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string productname
		{
			get
			{
				return this._productname;
			}
			set
			{
				if ((this._productname != value))
				{
					this.OnproductnameChanging(value);
					this.SendPropertyChanging();
					this._productname = value;
					this.SendPropertyChanged("productname");
					this.OnproductnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierid", DbType="Int NOT NULL")]
		public int supplierid
		{
			get
			{
				return this._supplierid;
			}
			set
			{
				if ((this._supplierid != value))
				{
					if (this._Supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupplieridChanging(value);
					this.SendPropertyChanging();
					this._supplierid = value;
					this.SendPropertyChanged("supplierid");
					this.OnsupplieridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_categoryid", DbType="Int NOT NULL")]
		public int categoryid
		{
			get
			{
				return this._categoryid;
			}
			set
			{
				if ((this._categoryid != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncategoryidChanging(value);
					this.SendPropertyChanging();
					this._categoryid = value;
					this.SendPropertyChanged("categoryid");
					this.OncategoryidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitprice", DbType="Money NOT NULL")]
		public decimal unitprice
		{
			get
			{
				return this._unitprice;
			}
			set
			{
				if ((this._unitprice != value))
				{
					this.OnunitpriceChanging(value);
					this.SendPropertyChanging();
					this._unitprice = value;
					this.SendPropertyChanged("unitprice");
					this.OnunitpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discontinued", DbType="Bit NOT NULL")]
		public bool discontinued
		{
			get
			{
				return this._discontinued;
			}
			set
			{
				if ((this._discontinued != value))
				{
					this.OndiscontinuedChanging(value);
					this.SendPropertyChanging();
					this._discontinued = value;
					this.SendPropertyChanged("discontinued");
					this.OndiscontinuedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_OrderDetails", ThisKey="productid", OtherKey="productid")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Product", Storage="_Category", ThisKey="categoryid", OtherKey="categoryid", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._categoryid = value.categoryid;
					}
					else
					{
						this._categoryid = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Supplier", ThisKey="supplierid", OtherKey="supplierid", IsForeignKey=true)]
		public Supplier Supplier
		{
			get
			{
				return this._Supplier.Entity;
			}
			set
			{
				Supplier previousValue = this._Supplier.Entity;
				if (((previousValue != value) 
							|| (this._Supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Supplier.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Supplier.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._supplierid = value.supplierid;
					}
					else
					{
						this._supplierid = default(int);
					}
					this.SendPropertyChanged("Supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Production.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _supplierid;
		
		private string _companyname;
		
		private string _contactname;
		
		private string _contacttitle;
		
		private string _address;
		
		private string _city;
		
		private string _region;
		
		private string _postalcode;
		
		private string _country;
		
		private string _phone;
		
		private string _fax;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsupplieridChanging(int value);
    partial void OnsupplieridChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void OncontactnameChanging(string value);
    partial void OncontactnameChanged();
    partial void OncontacttitleChanging(string value);
    partial void OncontacttitleChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void OnpostalcodeChanging(string value);
    partial void OnpostalcodeChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    #endregion
		
		public Supplier()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int supplierid
		{
			get
			{
				return this._supplierid;
			}
			set
			{
				if ((this._supplierid != value))
				{
					this.OnsupplieridChanging(value);
					this.SendPropertyChanging();
					this._supplierid = value;
					this.SendPropertyChanged("supplierid");
					this.OnsupplieridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string companyname
		{
			get
			{
				return this._companyname;
			}
			set
			{
				if ((this._companyname != value))
				{
					this.OncompanynameChanging(value);
					this.SendPropertyChanging();
					this._companyname = value;
					this.SendPropertyChanged("companyname");
					this.OncompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactname", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string contactname
		{
			get
			{
				return this._contactname;
			}
			set
			{
				if ((this._contactname != value))
				{
					this.OncontactnameChanging(value);
					this.SendPropertyChanging();
					this._contactname = value;
					this.SendPropertyChanged("contactname");
					this.OncontactnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacttitle", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string contacttitle
		{
			get
			{
				return this._contacttitle;
			}
			set
			{
				if ((this._contacttitle != value))
				{
					this.OncontacttitleChanging(value);
					this.SendPropertyChanging();
					this._contacttitle = value;
					this.SendPropertyChanged("contacttitle");
					this.OncontacttitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(15)")]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalcode", DbType="NVarChar(10)")]
		public string postalcode
		{
			get
			{
				return this._postalcode;
			}
			set
			{
				if ((this._postalcode != value))
				{
					this.OnpostalcodeChanging(value);
					this.SendPropertyChanging();
					this._postalcode = value;
					this.SendPropertyChanged("postalcode");
					this.OnpostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(24)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Supplier_Product", Storage="_Products", ThisKey="supplierid", OtherKey="supplierid")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Supplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _custid;
		
		private string _companyname;
		
		private string _contactname;
		
		private string _contacttitle;
		
		private string _address;
		
		private string _city;
		
		private string _region;
		
		private string _postalcode;
		
		private string _country;
		
		private string _phone;
		
		private string _fax;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncustidChanging(int value);
    partial void OncustidChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void OncontactnameChanging(string value);
    partial void OncontactnameChanged();
    partial void OncontacttitleChanging(string value);
    partial void OncontacttitleChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void OnpostalcodeChanging(string value);
    partial void OnpostalcodeChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    #endregion
		
		public Customer()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int custid
		{
			get
			{
				return this._custid;
			}
			set
			{
				if ((this._custid != value))
				{
					this.OncustidChanging(value);
					this.SendPropertyChanging();
					this._custid = value;
					this.SendPropertyChanged("custid");
					this.OncustidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string companyname
		{
			get
			{
				return this._companyname;
			}
			set
			{
				if ((this._companyname != value))
				{
					this.OncompanynameChanging(value);
					this.SendPropertyChanging();
					this._companyname = value;
					this.SendPropertyChanged("companyname");
					this.OncompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactname", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string contactname
		{
			get
			{
				return this._contactname;
			}
			set
			{
				if ((this._contactname != value))
				{
					this.OncontactnameChanging(value);
					this.SendPropertyChanging();
					this._contactname = value;
					this.SendPropertyChanged("contactname");
					this.OncontactnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contacttitle", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string contacttitle
		{
			get
			{
				return this._contacttitle;
			}
			set
			{
				if ((this._contacttitle != value))
				{
					this.OncontacttitleChanging(value);
					this.SendPropertyChanging();
					this._contacttitle = value;
					this.SendPropertyChanged("contacttitle");
					this.OncontacttitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region", DbType="NVarChar(15)")]
		public string region
		{
			get
			{
				return this._region;
			}
			set
			{
				if ((this._region != value))
				{
					this.OnregionChanging(value);
					this.SendPropertyChanging();
					this._region = value;
					this.SendPropertyChanged("region");
					this.OnregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postalcode", DbType="NVarChar(10)")]
		public string postalcode
		{
			get
			{
				return this._postalcode;
			}
			set
			{
				if ((this._postalcode != value))
				{
					this.OnpostalcodeChanging(value);
					this.SendPropertyChanging();
					this._postalcode = value;
					this.SendPropertyChanged("postalcode");
					this.OnpostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="NVarChar(24)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Orders", ThisKey="custid", OtherKey="custid")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderid;
		
		private int _productid;
		
		private decimal _unitprice;
		
		private short _qty;
		
		private decimal _discount;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderidChanging(int value);
    partial void OnorderidChanged();
    partial void OnproductidChanging(int value);
    partial void OnproductidChanged();
    partial void OnunitpriceChanging(decimal value);
    partial void OnunitpriceChanged();
    partial void OnqtyChanging(short value);
    partial void OnqtyChanged();
    partial void OndiscountChanging(decimal value);
    partial void OndiscountChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductidChanging(value);
					this.SendPropertyChanging();
					this._productid = value;
					this.SendPropertyChanged("productid");
					this.OnproductidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitprice", DbType="Money NOT NULL")]
		public decimal unitprice
		{
			get
			{
				return this._unitprice;
			}
			set
			{
				if ((this._unitprice != value))
				{
					this.OnunitpriceChanging(value);
					this.SendPropertyChanging();
					this._unitprice = value;
					this.SendPropertyChanged("unitprice");
					this.OnunitpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qty", DbType="SmallInt NOT NULL")]
		public short qty
		{
			get
			{
				return this._qty;
			}
			set
			{
				if ((this._qty != value))
				{
					this.OnqtyChanging(value);
					this.SendPropertyChanging();
					this._qty = value;
					this.SendPropertyChanged("qty");
					this.OnqtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Decimal(4,3) NOT NULL")]
		public decimal discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderDetail", Storage="_Product", ThisKey="productid", OtherKey="productid", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._productid = value.productid;
					}
					else
					{
						this._productid = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="orderid", OtherKey="orderid", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._orderid = value.orderid;
					}
					else
					{
						this._orderid = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _orderid;
		
		private System.Nullable<int> _custid;
		
		private int _empid;
		
		private System.DateTime _orderdate;
		
		private System.DateTime _requireddate;
		
		private System.Nullable<System.DateTime> _shippeddate;
		
		private int _shipperid;
		
		private decimal _freight;
		
		private string _shipname;
		
		private string _shipaddress;
		
		private string _shipcity;
		
		private string _shipregion;
		
		private string _shippostalcode;
		
		private string _shipcountry;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Shipper> _Shipper;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderidChanging(int value);
    partial void OnorderidChanged();
    partial void OncustidChanging(System.Nullable<int> value);
    partial void OncustidChanged();
    partial void OnempidChanging(int value);
    partial void OnempidChanged();
    partial void OnorderdateChanging(System.DateTime value);
    partial void OnorderdateChanged();
    partial void OnrequireddateChanging(System.DateTime value);
    partial void OnrequireddateChanged();
    partial void OnshippeddateChanging(System.Nullable<System.DateTime> value);
    partial void OnshippeddateChanged();
    partial void OnshipperidChanging(int value);
    partial void OnshipperidChanged();
    partial void OnfreightChanging(decimal value);
    partial void OnfreightChanged();
    partial void OnshipnameChanging(string value);
    partial void OnshipnameChanged();
    partial void OnshipaddressChanging(string value);
    partial void OnshipaddressChanged();
    partial void OnshipcityChanging(string value);
    partial void OnshipcityChanged();
    partial void OnshipregionChanging(string value);
    partial void OnshipregionChanged();
    partial void OnshippostalcodeChanging(string value);
    partial void OnshippostalcodeChanged();
    partial void OnshipcountryChanging(string value);
    partial void OnshipcountryChanged();
    #endregion
		
		public Order()
		{
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			this._Shipper = default(EntityRef<Shipper>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int orderid
		{
			get
			{
				return this._orderid;
			}
			set
			{
				if ((this._orderid != value))
				{
					this.OnorderidChanging(value);
					this.SendPropertyChanging();
					this._orderid = value;
					this.SendPropertyChanged("orderid");
					this.OnorderidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_custid", DbType="Int")]
		public System.Nullable<int> custid
		{
			get
			{
				return this._custid;
			}
			set
			{
				if ((this._custid != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustidChanging(value);
					this.SendPropertyChanging();
					this._custid = value;
					this.SendPropertyChanged("custid");
					this.OncustidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empid", DbType="Int NOT NULL")]
		public int empid
		{
			get
			{
				return this._empid;
			}
			set
			{
				if ((this._empid != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnempidChanging(value);
					this.SendPropertyChanging();
					this._empid = value;
					this.SendPropertyChanged("empid");
					this.OnempidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderdate", DbType="DateTime NOT NULL")]
		public System.DateTime orderdate
		{
			get
			{
				return this._orderdate;
			}
			set
			{
				if ((this._orderdate != value))
				{
					this.OnorderdateChanging(value);
					this.SendPropertyChanging();
					this._orderdate = value;
					this.SendPropertyChanged("orderdate");
					this.OnorderdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requireddate", DbType="DateTime NOT NULL")]
		public System.DateTime requireddate
		{
			get
			{
				return this._requireddate;
			}
			set
			{
				if ((this._requireddate != value))
				{
					this.OnrequireddateChanging(value);
					this.SendPropertyChanging();
					this._requireddate = value;
					this.SendPropertyChanged("requireddate");
					this.OnrequireddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippeddate", DbType="DateTime")]
		public System.Nullable<System.DateTime> shippeddate
		{
			get
			{
				return this._shippeddate;
			}
			set
			{
				if ((this._shippeddate != value))
				{
					this.OnshippeddateChanging(value);
					this.SendPropertyChanging();
					this._shippeddate = value;
					this.SendPropertyChanged("shippeddate");
					this.OnshippeddateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipperid", DbType="Int NOT NULL")]
		public int shipperid
		{
			get
			{
				return this._shipperid;
			}
			set
			{
				if ((this._shipperid != value))
				{
					if (this._Shipper.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshipperidChanging(value);
					this.SendPropertyChanging();
					this._shipperid = value;
					this.SendPropertyChanged("shipperid");
					this.OnshipperidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_freight", DbType="Money NOT NULL")]
		public decimal freight
		{
			get
			{
				return this._freight;
			}
			set
			{
				if ((this._freight != value))
				{
					this.OnfreightChanging(value);
					this.SendPropertyChanging();
					this._freight = value;
					this.SendPropertyChanged("freight");
					this.OnfreightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string shipname
		{
			get
			{
				return this._shipname;
			}
			set
			{
				if ((this._shipname != value))
				{
					this.OnshipnameChanging(value);
					this.SendPropertyChanging();
					this._shipname = value;
					this.SendPropertyChanged("shipname");
					this.OnshipnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipaddress", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string shipaddress
		{
			get
			{
				return this._shipaddress;
			}
			set
			{
				if ((this._shipaddress != value))
				{
					this.OnshipaddressChanging(value);
					this.SendPropertyChanging();
					this._shipaddress = value;
					this.SendPropertyChanged("shipaddress");
					this.OnshipaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipcity", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string shipcity
		{
			get
			{
				return this._shipcity;
			}
			set
			{
				if ((this._shipcity != value))
				{
					this.OnshipcityChanging(value);
					this.SendPropertyChanging();
					this._shipcity = value;
					this.SendPropertyChanged("shipcity");
					this.OnshipcityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipregion", DbType="NVarChar(15)")]
		public string shipregion
		{
			get
			{
				return this._shipregion;
			}
			set
			{
				if ((this._shipregion != value))
				{
					this.OnshipregionChanging(value);
					this.SendPropertyChanging();
					this._shipregion = value;
					this.SendPropertyChanged("shipregion");
					this.OnshipregionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippostalcode", DbType="NVarChar(10)")]
		public string shippostalcode
		{
			get
			{
				return this._shippostalcode;
			}
			set
			{
				if ((this._shippostalcode != value))
				{
					this.OnshippostalcodeChanging(value);
					this.SendPropertyChanging();
					this._shippostalcode = value;
					this.SendPropertyChanged("shippostalcode");
					this.OnshippostalcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipcountry", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
		public string shipcountry
		{
			get
			{
				return this._shipcountry;
			}
			set
			{
				if ((this._shipcountry != value))
				{
					this.OnshipcountryChanging(value);
					this.SendPropertyChanging();
					this._shipcountry = value;
					this.SendPropertyChanged("shipcountry");
					this.OnshipcountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="orderid", OtherKey="orderid")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Order", Storage="_Customer", ThisKey="custid", OtherKey="custid", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._custid = value.custid;
					}
					else
					{
						this._custid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Order", Storage="_Employee", ThisKey="empid", OtherKey="empid", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._empid = value.empid;
					}
					else
					{
						this._empid = default(int);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipper_Order", Storage="_Shipper", ThisKey="shipperid", OtherKey="shipperid", IsForeignKey=true)]
		public Shipper Shipper
		{
			get
			{
				return this._Shipper.Entity;
			}
			set
			{
				Shipper previousValue = this._Shipper.Entity;
				if (((previousValue != value) 
							|| (this._Shipper.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipper.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._Shipper.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._shipperid = value.shipperid;
					}
					else
					{
						this._shipperid = default(int);
					}
					this.SendPropertyChanged("Shipper");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Shippers")]
	public partial class Shipper : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _shipperid;
		
		private string _companyname;
		
		private string _phone;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnshipperidChanging(int value);
    partial void OnshipperidChanged();
    partial void OncompanynameChanging(string value);
    partial void OncompanynameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Shipper()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipperid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int shipperid
		{
			get
			{
				return this._shipperid;
			}
			set
			{
				if ((this._shipperid != value))
				{
					this.OnshipperidChanging(value);
					this.SendPropertyChanging();
					this._shipperid = value;
					this.SendPropertyChanged("shipperid");
					this.OnshipperidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string companyname
		{
			get
			{
				return this._companyname;
			}
			set
			{
				if ((this._companyname != value))
				{
					this.OncompanynameChanging(value);
					this.SendPropertyChanging();
					this._companyname = value;
					this.SendPropertyChanged("companyname");
					this.OncompanynameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(24) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Shipper_Order", Storage="_Orders", ThisKey="shipperid", OtherKey="shipperid")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shipper = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.Shipper = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Sales.Nums")]
	public partial class Num : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _n;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnChanging(int value);
    partial void OnnChanged();
    #endregion
		
		public Num()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_n", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int n
		{
			get
			{
				return this._n;
			}
			set
			{
				if ((this._n != value))
				{
					this.OnnChanging(value);
					this.SendPropertyChanging();
					this._n = value;
					this.SendPropertyChanged("n");
					this.OnnChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class fn_TopProductsResult
	{
		
		private int _productid;
		
		private string _productname;
		
		private decimal _unitprice;
		
		public fn_TopProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productid", DbType="Int NOT NULL")]
		public int productid
		{
			get
			{
				return this._productid;
			}
			set
			{
				if ((this._productid != value))
				{
					this._productid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productname", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string productname
		{
			get
			{
				return this._productname;
			}
			set
			{
				if ((this._productname != value))
				{
					this._productname = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unitprice", DbType="Money NOT NULL")]
		public decimal unitprice
		{
			get
			{
				return this._unitprice;
			}
			set
			{
				if ((this._unitprice != value))
				{
					this._unitprice = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
